local RS=game:GetService('ReplicatedStorage');local P=game:GetService('Players');local Net=require(RS.Net.Events);local S=require(RS.Net.Schemas['LeaderboardUpdate']);local scores={};local function pub()local entries={}for uid,s in pairs(scores)do table.insert(entries,{userId=uid,waves=s.waves or 0,time=s.time or 0,deaths=s.deaths or 0})end;table.sort(entries,function(a,b)return a.time>b.time end);local payload={entries=entries};if S.validate(payload)then Net.Get('LeaderboardUpdate'):FireAllClients(payload)end end;P.PlayerAdded:Connect(function(plr)scores[plr.UserId]={time=0,waves=0,deaths=0}end);P.PlayerRemoving:Connect(function(plr)scores[plr.UserId]=nil pub()end);task.spawn(function()while true do task.wait(10)for _,plr in ipairs(P:GetPlayers())do local s=scores[plr.UserId];if s then s.time+=10 end end pub()end end)
